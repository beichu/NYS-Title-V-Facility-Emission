---
title: "Titile V Facilities Emission Data Visualization"
author: "Bei Chu"
output:
  pdf_document: default
  html_document: default
subtitle: A Work Sample
header-includes:
   - \usepackage[singlelinecheck=false]{caption}
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```

## Introduction

This work sample showcases analysis on the reported air emission data from Title V facilities in New York state. It first provides an overview about the facilities, and then a focused analysis of Hazardous Air Pollutants (HAPS) emissions data across the facilities. The HAPS were chosen because their potential impact on human heath.

Title V facilities are major sources of air pollution that require a Title V operating permit under the U.S. Clean Air Act. These permits are part of a federal program designed to ensure that large emitters of air pollutants operate transparently, comply with all applicable regulations, and are held accountable for their emissions. 
The analysis tries to answer the following questions:  
1. Where are the most HAPS emission facilities located in New York State?
2. Which industry sectors have the most HAPS emission?
3. What are the trends of HAPS emission across NEW York State?



### Data sources
The data used in this work sample were collected from three data sets that are publicly available:

1. [Title V Emissions Inventory: Beginning 2010](https://data.ny.gov/Energy-Environment/Title-V-Emissions-Inventory-Beginning-2010/4ry5-tfin/about_data)
2. [Issued_Title_V_Facility_Permits](https://data.ny.gov/Energy-Environment/Issued-Title-V-Facility-Permits/4n3a-en4b/about_data)
3. [Standard Industrial Classification Code Major Groups](https://www.osha.gov/data/sic-manual)

The report was prepared using R 4.5.1 (citation) with Rmarkdown and other supporting R packages.

```{r include=F, echo=F}
# Load libraries and data
library(tidyverse)
library(pdftools)
library(skimr)
library(kableExtra)
library(formattable)
library(glue)
library(scales)
library(cowplot)

library(rvest)
library(httr)

emission_data <- read.csv("data/Title_V_Emissions_Inventory__Beginning_2010.csv")
permits <- read.csv("data/Issued_Title_V_Facility_Permits.csv")


skim <- skim(emission_data)

```

```{r include=F, echo=F}
#The emission data include names and locations as well as SIC code (Standard Industrial Classification Code) for Title V facilities, and a number of reported emissions. 
#Check whether the locations are unique in the emission data for each facility

emission_data %>%
    select(DEC.ID, Facility.Name, Location) %>%
    distinct() %>%
    group_by(DEC.ID) %>%
    add_tally() %>%
    filter(n > 1)

#It looks like there are multiple locations for some DEC.ID/Facility name. Does each DEC.ID correspond to one Facility.Name? 
emission_data %>%
    select(DEC.ID, Facility.Name) %>%
    distinct() %>%
    group_by(DEC.ID) %>%
    add_tally() %>%
    filter(n > 1) %>%
    arrange(DEC.ID) 
```


## Overview
```{r include=F, echo=F}
#So the facility names, coordinates, county and municipality need to be harmonized. To make things simple, the first name appears in the dataset will be chosen to represent the facility name, and the lat/long of the coordinates for the same facility will be averaged. County and municipality will be based on the averaged coordinates.
unique_name <- emission_data %>%
    select(DEC.ID, Facility.Name, Location) %>%
    distinct() %>%
    group_by(DEC.ID) %>%
    mutate(Location = str_replace_all(Location, "POINT \\(|\\)", "")) %>% # remove extra characters from coordinates
    separate(Location, into = c("Longitude", "Latitude"), sep = " ") %>% # separate coordinates string into long/lat columns
    mutate(Longitude = as.numeric(Longitude),
           Latitude = as.numeric(Latitude)) %>% # convert coordinates into numeric data type
    mutate(Longitude = mean(Longitude, na.rm = T),
           Latitude = mean(Latitude, na.rm = T)) %>% # calculate average 
    slice(1) %>% # select first row of each group
    rename(Facility_name_clean = Facility.Name)


emission_data_clean <- emission_data %>%
    left_join(unique_name, by = "DEC.ID") %>%
    select(-Location, -Facility.Name, -County, -Municipality) %>%
    select(Year, Facility_name_clean, Latitude, Longitude, everything())
```


```{r include=F, echo=F}


#Next I'm going to categorize the SICs based on their major groups using the information found on https://www.osha.gov/data/sic-manual so the SIC can be used in further analysis. There is one missing value in the SIC.Code field, by examining the facility name, we can see that the facility name is "PRINCETON APARTMENTS - MARIANI MANAGEMENT CORP". Searching the SIC manual and the SIC code for Operators of Apartment Buildings is 6513.

emission_data_clean <- emission_data_clean %>%
    mutate(SIC.Code = ifelse(Facility_name_clean == "PRINCETON APARTMENTS - MARIANI MANAGEMENT CORP", 6531, SIC.Code))

SIC_info <- read_html("data/SIC Manual _ Occupational Safety and Health Administration.html") %>%
    html_nodes("ol ul li") %>%
    html_text() %>%
    enframe(value = "SIC") %>%
    separate(SIC, into = c("Major_Group", "SIC_Desc"), sep = ":") %>%
    mutate(Major_Group = str_replace(Major_Group, "Major Group ", ""),
           SIC_Desc = trimws(SIC_Desc)) %>%
    select(-name)


emission_data_clean <- emission_data_clean %>%
    mutate(SIC_group_code = str_sub(SIC.Code, 1, 2)) %>%
    left_join(SIC_info, by = join_by("SIC_group_code" == "Major_Group" ))
```



Figure 1 shows the Title V facility locations on a map. These facilities are located through out New York state with the exception in two of the counties: Hamilton county and Ostego county. There are more facilities located on the west and east sides of the state, as well as in Long Island. There are less numbers of facilites in the central part of the state.
```{r include = F, message=F, warning=F, echo=F}
library(sf)
library(basemaps) 
library(usmap)
library(tigris)



# Get NY boundaries
state_boundaries <- counties(state = "NY") %>%
    st_transform(crs = st_crs(3857)) # 3857 is the basemap crs 

# Convert to spatial object
facilities_sf <- st_as_sf(unique_name, coords = c("Longitude", "Latitude"), crs = st_crs(4326)) %>%
     st_transform(crs = st_crs(3857))

# which counties do not have any Title V facility?
counties <- state_boundaries$NAME
titleV_counties <- unique(emission_data$County) %>% str_to_title()
setdiff(counties, titleV_counties)
```

```{r message=F, warning=F, echo=F}
basemap_ggplot(state_boundaries, map_service = "osm", map_type = "streets", verbose = F) +
    geom_sf(data = state_boundaries, fill = "transparent") +
    geom_sf(data = facilities_sf, color = "gray30") +
    #labs(y = "Latitude",
    #     x = "Longitude") +
    ggtitle("Figure 1. Title V Facility Locations in New York State") +
    theme(panel.background = element_blank(),
    plot.background = element_rect(fill = "transparent", color = NA),
    panel.grid = element_blank(),
    axis.title = element_blank(),
    axis.text = element_blank(),
    axis.ticks = element_blank(),
    plot.title.position = "panel",
    plot.title = element_text(hjust = 0),
    plot.margin = margin(0,0,0,0, unit = "pt"))

```
The table below shows the top industry sectors where these facilities belong to. The highest number of facilities are  Electric, Gas, And Sanitary Services, which has 199 facilities.
```{r message=F, warning=F, echo=F}
# how many facilities in each industry sector?
table1 <- emission_data_clean %>%
    select(DEC.ID, SIC_Desc) %>%
    distinct() %>%
    group_by(SIC_Desc) %>%
    summarise(`Number of Facilities` = n()) %>%
    arrange(desc(`Number of Facilities`)) %>%
    mutate(Ranking = row_number()) %>%
    mutate(Ranking = ifelse(Ranking <= 10, Ranking, 11)) %>%
    ungroup() %>%
    group_by(Ranking) %>%
    summarise(`Number of Facilities` = sum(`Number of Facilities`),
              Industries = ifelse(Ranking <=10, SIC_Desc, "Other")) %>%
    distinct() %>%
    ungroup() %>%
    select(Industries, `Number of Facilities`)

    table1$Industries[11] <- paste0(table1$Industries[11], 
                                footnote_marker_alphabet(1))
    kable(table1, caption = "Top Industries in Title V Facilities", align = "l") %>%
    footnote(alphabet = c("Other smaller industries having less than or equal to 12 facilities")) %>%
    kable_classic() 
    

```
\pagebreak
## Overview of reported pollutants
The table below shows the amount that each pollutant is released into the air from these facilities? Show range, mean, median and total reported value
```{r message=F, warning=F, echo=F}

# pivot emission data into long format for analysis
emission_data_clean <- emission_data_clean %>%
    pivot_longer(cols = contains("tons"), names_to = "Analyte", values_to = "Tonage") %>%
    mutate(Analyte = str_replace(Analyte, "..tons.", ""))

summary_stats <- emission_data_clean %>%
    group_by(SIC_Desc, Analyte) %>%
    summarise( Mean = mean(Tonage, na.rm = T), 
           Min = min(Tonage, na.rm = T),
           Median = median(Tonage, na.rm = T),
           Max = max(Tonage, na.rm = T),
           Total = sum(Tonage, na.rm = T)) %>%
        mutate(Mean = round(Mean, 2),
           Min = round(Min, 2),
           Median = round(Median, 2),
           Max = round(Max, 2),
           Total = round(Total, 2))

smart_rounding <- function(num){
    stopifnot(is.numeric(num))
    if(num >= 100){
        res <- scales::comma(round(num, 0))
    }else if(num >= 10){
        res <- as.character(round(num, 1))
    }else{
        res <- as.character(round(num, 2))
    }
    return(res)
}
summary_stats_by_analyte <- emission_data_clean %>%
    group_by(Analyte) %>%
    summarise(Mean = mean(Tonage, na.rm = T), 
           Min = min(Tonage, na.rm = T),
           Median = median(Tonage, na.rm = T),
           Max = max(Tonage, na.rm = T),
           Total = sum(Tonage, na.rm = T)) %>%
    rowwise() %>%
        mutate(
           Mean = smart_rounding(Mean),
           Range = paste0(smart_rounding(Min), " - ", smart_rounding(Max)),
           Median = smart_rounding(Median),
           Max = smart_rounding(Max),
           Total = smart_rounding(Total)) %>%
    select(Analyte, Range, Mean, Median, Total) 
kable(summary_stats_by_analyte,
      caption = "Summary Statisics of Title V Facility Air Emissions in New York State") %>% 
    kable_classic(full_width = T) %>%
    add_header_above(c(" " = 1, "tons/year" = 4)) 
```


# Top HAPS Emission by Industry

The following plot shows which industries emit the most HAPS per year. 

```{r , message=F, warning=F, echo=F}


HAPs_by_SIC <- emission_data_clean %>%
    filter(Analyte == "HAPS") %>%
    group_by(SIC_Desc) %>%
    summarise(Mean = mean(Tonage, na.rm = T),
              Total = sum(Tonage, na.rm = T)) %>%
        mutate(Mean = round(Mean, 2),
               Total_by_SIC = round(Total, 2)) %>%
  ungroup() %>%
  mutate(HAPS_tot = sum(Total_by_SIC)) %>%
   mutate(proportion = Total_by_SIC/HAPS_tot) %>%
  mutate(percentage_label = paste0(as.character(round(proportion, 3)*100), "%")) %>%
  arrange(desc(proportion)) %>%
  mutate(ranking = row_number()) %>%
  mutate(top5 = ifelse(ranking <=5, SIC_Desc, "Other"))
    

HAPS <- ggplot(HAPs_by_SIC) +
    geom_col(aes(y = reorder(top5, ranking), x = proportion), fill = "grey50") +
    geom_text(aes(x = proportion, y = reorder(top5, ranking), label = percentage_label, hjust = ifelse(proportion > .05, 1.2, -.2))) + 
    facet_wrap(~ reorder(top5, ranking), ncol = 1, scales = "free_y") +
   # labs(title = analyte) +
    scale_x_continuous(labels = comma,
                       expand = c(0, 0)) +
    scale_y_discrete(guide = "none") +
    theme_minimal() +
    theme(panel.grid.minor = element_blank(),
        panel.grid.major = element_blank(),
        axis.line = element_blank(),
        axis.ticks = element_blank(),
        axis.title = element_blank(),
        plot.title = element_text(),
        axis.text = element_blank(), 
        strip.text = element_text(hjust = 0, 
                                  margin = margin(0, 0, 0, 0), 
                                  size = rel(0.7), 
                                  face = "bold"))


HAPS

#title <-  ggdraw() + 
#  draw_label(
#    "Total Reported HAPS Emissions (2010 - 2015) in NYS",
#    fontface = 'bold',
#    x = 0,
#    hjust = -0.5
#  )
# combine plots

#combined_plot_with_title <- plot_grid(title, HAPS, ncol = 1,
#  # rel_heights values control vertical title margins
#  rel_heights = c(0.1, 1))

#combined_plot_with_title

```


